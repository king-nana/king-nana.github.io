<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://king-nana.github.io</id>
    <title>Gridea</title>
    <updated>2021-11-03T06:16:05.792Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://king-nana.github.io"/>
    <link rel="self" href="https://king-nana.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://king-nana.github.io/images/avatar.png</logo>
    <icon>https://king-nana.github.io/favicon.ico</icon>
    <rights>All rights reserved 2021, Gridea</rights>
    <entry>
        <title type="html"><![CDATA[axios 请求多个baseurl 的情况]]></title>
        <id>https://king-nana.github.io/post/axios-qing-qiu-duo-ge-baseurl-de-qing-kuang/</id>
        <link href="https://king-nana.github.io/post/axios-qing-qiu-duo-ge-baseurl-de-qing-kuang/">
        </link>
        <updated>2021-11-03T06:14:54.000Z</updated>
        <content type="html"><![CDATA[<h5 id="axios-请求多个baseurl-的情况">axios 请求多个baseurl 的情况</h5>
<p>目前需要请求两种端口号:</p>
<p>1、http://127.0.0.1:16666</p>
<p>2、http://127.0.0.1:18888</p>
<p>1）src文件夹底下新建一个request文件夹，新建一个reques.js 文件</p>
<pre><code class="language-js">import axios from &quot;axios&quot;
axios.defaults.headers = { 'content-type': 'application/json;charset=UTF-8' };

function paramsToUrl(url, params) {
    if (!params) return url
    for (var key in params) {
        if (params[key] &amp;&amp; params[key] != 'undefined') {
            if (url.indexOf('?') != -1) {
                url += '&amp;' + '' + key + '=' + params[key] || '' + ''
            } else {
                url += '?' + '' + key + '=' + params[key] || '' + ''
            }
        }
    }
    return url
}

function requireData(url, params, type, item) {
    if (!url) return false
    switch (item) {
        case 'port16':
            url = &quot;http://127.0.0.1:16666&quot; + url
            break;
        default:
            url = &quot;http://127.0.0.1:18888&quot; + url
            break;
    }
    
    if (type === 'get') {
        url = paramsToUrl(url, params)
        return new Promise((resolve, reject) =&gt; {
            axios.get(url, params).then(res =&gt; {
                resolve(res.data)
            }).catch(err =&gt; {
                reject(err)
            })
        })
    } else {
        return new Promise((resolve, reject) =&gt; {
            axios.post(url, params).then(res =&gt; {
                resolve(res.data)
            }).catch(err =&gt; {
                reject(err)
            })
        })
    }
}

export default {
    install(Vue, options) {
        //-&gt;接口1的请求数据方法
        Vue.prototype.req16Service = function (url, params, type) {
            return requireData.call(this, url, params, type, 'port16')
        }
        //-&gt;接口2的请求数据方法
        Vue.prototype.req18Service = function (url, params, type) {
            return requireData.call(this, url, params, type, 'port18')
        }
    }
}

</code></pre>
<p>然后在main.js中全局挂载上面文件</p>
<pre><code class="language-js">// 全局封装了axios多种类型接口的请求方法
import common from '@/request/request'
Vue.use(common)
</code></pre>
<p>vue界面使用案例</p>
<pre><code class="language-js"> //get请求
async getMenuList() {
      const res = await this.req18Service(
        '/CampusModelService/Rest/GetCampus',
        {},
        'get'
      )
      console.log(res)
    },
  //post 请求
    async getTags() {
      const res = await this.req16Service(
        '/Rest/BatchGetSnapshot',
        {
          tagNames: [
            '9566acd5-78fc-4aae-a03f-d2f8f5bc3a9a.DIAlarm',
            '456925ce-394a-48f5-a233-56fad17175f2.DIAlarm',
          ],
        },
        'post'
      )
      console.log(res)
    },
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello blog]]></title>
        <id>https://king-nana.github.io/post/hello-blog/</id>
        <link href="https://king-nana.github.io/post/hello-blog/">
        </link>
        <updated>2021-09-25T13:55:25.000Z</updated>
        <content type="html"><![CDATA[<p>###尝试自己建博客的第一天，要坚持写作哦</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://king-nana.github.io/post/hello-gridea/</id>
        <link href="https://king-nana.github.io/post/hello-gridea/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>